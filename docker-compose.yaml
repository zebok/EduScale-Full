version: '3.8'

services:
  # Frontend - React Application
  frontend:
    build: ./frontend
    container_name: eduscale-frontend
    ports:
      - "3000:80"
    networks:
      - eduscale-network
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:5000

  # Backend - Node.js API
  backend:
    build: ./backend
    container_name: eduscale-backend
    ports:
      - "5000:5000"
    networks:
      - eduscale-network
    depends_on:
      - mongo
      - cassandra
      - redis
      - neo4j
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGO_URI=mongodb://mongo:27017/eduscale
      - CASSANDRA_CONTACT_POINTS=cassandra
      - CASSANDRA_KEYSPACE=eduscale
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=eduscale123
    volumes:
      - ./backend:/app
      - /app/node_modules

  # MongoDB - Fase B: Expediente de Admisión
  mongo:
    image: mongo:7.0
    container_name: eduscale-mongo
    ports:
      - "27017:27017"
    networks:
      - eduscale-network
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=eduscale

  # Cassandra - Fase C: Registro Inmutable de Inscripciones
  cassandra:
    image: cassandra:4.1
    container_name: eduscale-cassandra
    ports:
      - "9042:9042"
    networks:
      - eduscale-network
    volumes:
      - cassandra-data:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=EduScaleCluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe cluster'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis - Fase A: Interés/Prospección (validación, rate limiting)
  redis:
    image: redis:7-alpine
    container_name: eduscale-redis
    ports:
      - "6379:6379"
    networks:
      - eduscale-network
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

  # Neo4j - Relaciones y Datos Complejos
  neo4j:
    image: neo4j:5.13
    container_name: eduscale-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    networks:
      - eduscale-network
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/eduscale123
      - NEO4J_dbms_memory_pagecache_size=512M
      - NEO4J_dbms_memory_heap_max__size=1G

networks:
  eduscale-network:
    driver: bridge

volumes:
  mongo-data:
  cassandra-data:
  redis-data:
  neo4j-data:
  neo4j-logs:
